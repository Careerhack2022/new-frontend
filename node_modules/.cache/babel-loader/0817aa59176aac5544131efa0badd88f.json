{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u7D00\\u7D20\\u537F\\\\Desktop\\\\dash\\\\src\\\\components\\\\chart\\\\EChart.js\",\n    _s = $RefreshSig$();\n\nimport ReactApexChart from \"react-apexcharts\";\nimport { Row, Col, Typography } from \"antd\";\nimport { useEffect, useState } from 'react';\nimport { getDeviceDataAll, getDeviceDataOne } from '../api/device';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction EChart() {\n  _s();\n\n  const {\n    Title,\n    Paragraph\n  } = Typography;\n  const [demo_day, setDemoData] = useState(null);\n  const [priority_list, setPriority] = useState(null);\n  const [seconds, setSeconds] = useState(null);\n  useEffect(() => {\n    getDeviceDataAll(\"demo_day\").then(res => {\n      setDemoData(res.data); // console.log(\"data[0]\", res.data[0])\n\n      let temp = {\n        \"dryer\": res.data[0][\"dryer_priority\"],\n        \"heater\": res.data[0][\"heater_priority\"],\n        \"pot\": res.data[0][\"pot_priority\"],\n        \"purifier_black\": res.data[0][\"purifier_black_priority\"],\n        \"purifier_small\": res.data[0][\"purifier_small_priority\"],\n        \"purifier_white\": res.data[0][\"purifier_white_priority\"]\n      };\n      setPriority(temp);\n    });\n  }, []);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setSeconds(seconds => seconds + 1);\n    }, 5000);\n    return () => clearInterval(interval);\n  }, []);\n  var data = [];\n  data.push(['x', 'Pot', 'Purifier White', 'Purifier Black', 'Purifier Small', 'Heater', 'Dryer']);\n\n  if (demo_day === null) {\n    data.push(['2022-01-24 00:00:00', '0', '0', '0', '0', '0']);\n  } else {\n    var range = seconds;\n    if (range >= 144) range = 143;\n    var i = 0;\n\n    for (i = 0; i <= range; i++) {\n      data.push([demo_day[i]['timestamp'], demo_day[i]['pot'], demo_day[i]['purifier_white'], demo_day[i]['purifier_black'], demo_day[i]['purifier_small'], demo_day[i]['heater'], demo_day[i]['dryer']]);\n    }\n  }\n\n  var d = {\n    'timestamp': 0,\n    'pot': 0,\n    'purifier_white': 0,\n    'purifier_black': 0,\n    'purifier_small': 0,\n    'heater': 0,\n    'dryer': 0\n  };\n\n  for (i = 1; i < data.length; i++) {\n    d['pot'] += data[i][1];\n    d['purifier_white'] += data[i][2];\n    d['purifier_black'] += data[i][3];\n    d['purifier_small'] += data[i][4];\n    d['dryer'] += data[i][5];\n    d['heater'] += data[i][6];\n  }\n\n  const series = [{\n    name: \"Electricity\",\n    data: [d['pot'].toFixed(2), d['purifier_white'].toFixed(2), d['purifier_black'].toFixed(2), d['purifier_small'].toFixed(2), d['heater'].toFixed(2), d['dryer'].toFixed(2)],\n    color: \"#fff\"\n  }];\n  const items = [{\n    Title: \"3,6K\",\n    user: \"Users\"\n  }, {\n    Title: \"2m\",\n    user: \"Clicks\"\n  }, {\n    Title: \"$772\",\n    user: \"Sales\"\n  }, {\n    Title: \"82\",\n    user: \"Items\"\n  }];\n  const option = {\n    chart: {\n      type: \"bar\",\n      width: \"100%\",\n      height: \"auto\",\n      toolbar: {\n        show: false\n      }\n    },\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        columnWidth: \"55%\",\n        borderRadius: 5\n      }\n    },\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      show: true,\n      width: 1,\n      colors: [\"transparent\"]\n    },\n    grid: {\n      show: true,\n      borderColor: \"#ccc\",\n      strokeDashArray: 2\n    },\n    xaxis: {\n      categories: ['pot', 'purifier_white', 'purifier_black', 'purifier_small', 'heater', 'dryer'],\n      labels: {\n        show: true,\n        align: \"right\",\n        minWidth: 0,\n        maxWidth: 160,\n        style: {\n          colors: [\"#fff\", \"#fff\", \"#fff\", \"#fff\", \"#fff\", \"#fff\", \"#fff\", \"#fff\", \"#fff\", \"#fff\"]\n        }\n      }\n    },\n    yaxis: {\n      labels: {\n        show: true,\n        align: \"right\",\n        minWidth: 0,\n        maxWidth: 160,\n        style: {\n          colors: [\"#fff\", \"#fff\", \"#fff\", \"#fff\", \"#fff\", \"#fff\", \"#fff\", \"#fff\", \"#fff\", \"#fff\"]\n        }\n      }\n    },\n    tooltip: {\n      y: {\n        formatter: function (val) {\n          return \" \" + val + \" Wattages\";\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chart\",\n      children: /*#__PURE__*/_jsxDEV(ReactApexChart, {\n        className: \"bar-chart\",\n        options: option,\n        series: series,\n        type: \"bar\",\n        height: 250\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-vistior\",\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        level: 5,\n        children: \"Electricity distribution\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n        className: \"lastweek\",\n        children: \"Update every 10 minutes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n        className: \"lastweek\",\n        children: \"We can see the usage of electricity of every electronical device.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(EChart, \"2iVQglAeLpArj3ndLIfQlObWbds=\");\n\n_c = EChart;\nexport default EChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"EChart\");","map":{"version":3,"sources":["C:/Users/紀素卿/Desktop/dash/src/components/chart/EChart.js"],"names":["ReactApexChart","Row","Col","Typography","useEffect","useState","getDeviceDataAll","getDeviceDataOne","EChart","Title","Paragraph","demo_day","setDemoData","priority_list","setPriority","seconds","setSeconds","then","res","data","temp","interval","setInterval","clearInterval","push","range","i","d","length","series","name","toFixed","color","items","user","option","chart","type","width","height","toolbar","show","plotOptions","bar","horizontal","columnWidth","borderRadius","dataLabels","enabled","stroke","colors","grid","borderColor","strokeDashArray","xaxis","categories","labels","align","minWidth","maxWidth","style","yaxis","tooltip","y","formatter","val"],"mappings":";;;AAEA,OAAOA,cAAP,MAA2B,kBAA3B;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,UAAnB,QAAqC,MAArC;AACA,SAAQC,SAAR,EAAkBC,QAAlB,QAAiC,OAAjC;AACA,SAASC,gBAAT,EAA2BC,gBAA3B,QAAmD,eAAnD;;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAChB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAuBP,UAA7B;AACA,QAAM,CAACQ,QAAD,EAAUC,WAAV,IAAuBP,QAAQ,CAAC,IAAD,CAArC;AACA,QAAM,CAACQ,aAAD,EAAeC,WAAf,IAA8BT,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACU,OAAD,EAASC,UAAT,IAAsBX,QAAQ,CAAC,IAAD,CAApC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,gBAAgB,CAAC,UAAD,CAAhB,CAA6BW,IAA7B,CAAkCC,GAAG,IAAI;AACvCN,MAAAA,WAAW,CAACM,GAAG,CAACC,IAAL,CAAX,CADuC,CAEvC;;AACA,UAAIC,IAAI,GAAG;AACT,iBAASF,GAAG,CAACC,IAAJ,CAAS,CAAT,EAAY,gBAAZ,CADA;AAET,kBAAUD,GAAG,CAACC,IAAJ,CAAS,CAAT,EAAY,iBAAZ,CAFD;AAGT,eAAOD,GAAG,CAACC,IAAJ,CAAS,CAAT,EAAY,cAAZ,CAHE;AAIT,0BAAkBD,GAAG,CAACC,IAAJ,CAAS,CAAT,EAAY,yBAAZ,CAJT;AAKT,0BAAkBD,GAAG,CAACC,IAAJ,CAAS,CAAT,EAAY,yBAAZ,CALT;AAMT,0BAAkBD,GAAG,CAACC,IAAJ,CAAS,CAAT,EAAY,yBAAZ;AANT,OAAX;AAQAL,MAAAA,WAAW,CAACM,IAAD,CAAX;AACD,KAZD;AAaD,GAdQ,EAcN,EAdM,CAAT;AAeAhB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAEjCN,MAAAA,UAAU,CAACD,OAAO,IAAIA,OAAO,GAAG,CAAtB,CAAV;AACD,KAH2B,EAGzB,IAHyB,CAA5B;AAKA,WAAO,MAAMQ,aAAa,CAACF,QAAD,CAA1B;AACD,GAPQ,EAON,EAPM,CAAT;AAQA,MAAIF,IAAI,GAAG,EAAX;AACAA,EAAAA,IAAI,CAACK,IAAL,CAAU,CACR,GADQ,EACH,KADG,EACI,gBADJ,EACqB,gBADrB,EACsC,gBADtC,EACuD,QADvD,EACgE,OADhE,CAAV;;AAIA,MAAGb,QAAQ,KAAG,IAAd,EAAmB;AACjBQ,IAAAA,IAAI,CAACK,IAAL,CAAU,CAAC,qBAAD,EAAuB,GAAvB,EAA2B,GAA3B,EAA+B,GAA/B,EAAmC,GAAnC,EAAuC,GAAvC,CAAV;AACD,GAFD,MAGI;AACF,QAAIC,KAAK,GAAGV,OAAZ;AACA,QAAGU,KAAK,IAAE,GAAV,EAAeA,KAAK,GAAG,GAAR;AACf,QAAIC,CAAC,GAAE,CAAP;;AACA,SAAKA,CAAC,GAAE,CAAR,EAAUA,CAAC,IAAED,KAAb,EAAmBC,CAAC,EAApB,EAAuB;AACnBP,MAAAA,IAAI,CAACK,IAAL,CAAU,CAACb,QAAQ,CAACe,CAAD,CAAR,CAAY,WAAZ,CAAD,EAA0Bf,QAAQ,CAACe,CAAD,CAAR,CAAY,KAAZ,CAA1B,EAA6Cf,QAAQ,CAACe,CAAD,CAAR,CAAY,gBAAZ,CAA7C,EAA2Ef,QAAQ,CAACe,CAAD,CAAR,CAAY,gBAAZ,CAA3E,EAAyGf,QAAQ,CAACe,CAAD,CAAR,CAAY,gBAAZ,CAAzG,EAAuIf,QAAQ,CAACe,CAAD,CAAR,CAAY,QAAZ,CAAvI,EAA6Jf,QAAQ,CAACe,CAAD,CAAR,CAAY,OAAZ,CAA7J,CAAV;AAEH;AACF;;AACD,MAAIC,CAAC,GAAG;AAAC,iBAAY,CAAb;AAAe,WAAM,CAArB;AAAuB,sBAAiB,CAAxC;AAA0C,sBAAiB,CAA3D;AAA6D,sBAAiB,CAA9E;AAAgF,cAAS,CAAzF;AAA2F,aAAQ;AAAnG,GAAR;;AACA,OAAID,CAAC,GAAG,CAAR,EAAUA,CAAC,GAACP,IAAI,CAACS,MAAjB,EAAwBF,CAAC,EAAzB,EAA4B;AAC1BC,IAAAA,CAAC,CAAC,KAAD,CAAD,IAAUR,IAAI,CAACO,CAAD,CAAJ,CAAQ,CAAR,CAAV;AACAC,IAAAA,CAAC,CAAC,gBAAD,CAAD,IAAqBR,IAAI,CAACO,CAAD,CAAJ,CAAQ,CAAR,CAArB;AACAC,IAAAA,CAAC,CAAC,gBAAD,CAAD,IAAqBR,IAAI,CAACO,CAAD,CAAJ,CAAQ,CAAR,CAArB;AACAC,IAAAA,CAAC,CAAC,gBAAD,CAAD,IAAqBR,IAAI,CAACO,CAAD,CAAJ,CAAQ,CAAR,CAArB;AACAC,IAAAA,CAAC,CAAC,OAAD,CAAD,IAAYR,IAAI,CAACO,CAAD,CAAJ,CAAQ,CAAR,CAAZ;AACAC,IAAAA,CAAC,CAAC,QAAD,CAAD,IAAaR,IAAI,CAACO,CAAD,CAAJ,CAAQ,CAAR,CAAb;AACD;;AACD,QAAMG,MAAM,GAAG,CACb;AACEC,IAAAA,IAAI,EAAE,aADR;AAEEX,IAAAA,IAAI,EAAE,CAACQ,CAAC,CAAC,KAAD,CAAD,CAASI,OAAT,CAAiB,CAAjB,CAAD,EAAsBJ,CAAC,CAAC,gBAAD,CAAD,CAAoBI,OAApB,CAA4B,CAA5B,CAAtB,EAAsDJ,CAAC,CAAC,gBAAD,CAAD,CAAoBI,OAApB,CAA4B,CAA5B,CAAtD,EAAsFJ,CAAC,CAAC,gBAAD,CAAD,CAAoBI,OAApB,CAA4B,CAA5B,CAAtF,EAAsHJ,CAAC,CAAC,QAAD,CAAD,CAAYI,OAAZ,CAAoB,CAApB,CAAtH,EAA8IJ,CAAC,CAAC,OAAD,CAAD,CAAWI,OAAX,CAAmB,CAAnB,CAA9I,CAFR;AAGEC,IAAAA,KAAK,EAAE;AAHT,GADa,CAAf;AAOA,QAAMC,KAAK,GAAG,CACZ;AACExB,IAAAA,KAAK,EAAE,MADT;AAEEyB,IAAAA,IAAI,EAAE;AAFR,GADY,EAKZ;AACEzB,IAAAA,KAAK,EAAE,IADT;AAEEyB,IAAAA,IAAI,EAAE;AAFR,GALY,EASZ;AACEzB,IAAAA,KAAK,EAAE,MADT;AAEEyB,IAAAA,IAAI,EAAE;AAFR,GATY,EAaZ;AACEzB,IAAAA,KAAK,EAAE,IADT;AAEEyB,IAAAA,IAAI,EAAE;AAFR,GAbY,CAAd;AAkBA,QAAMC,MAAM,GAAI;AACdC,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE,KADD;AAELC,MAAAA,KAAK,EAAE,MAFF;AAGLC,MAAAA,MAAM,EAAE,MAHH;AAKLC,MAAAA,OAAO,EAAE;AACPC,QAAAA,IAAI,EAAE;AADC;AALJ,KADO;AAUdC,IAAAA,WAAW,EAAE;AACXC,MAAAA,GAAG,EAAE;AACHC,QAAAA,UAAU,EAAE,KADT;AAEHC,QAAAA,WAAW,EAAE,KAFV;AAGHC,QAAAA,YAAY,EAAE;AAHX;AADM,KAVC;AAiBdC,IAAAA,UAAU,EAAE;AACVC,MAAAA,OAAO,EAAE;AADC,KAjBE;AAoBdC,IAAAA,MAAM,EAAE;AACNR,MAAAA,IAAI,EAAE,IADA;AAENH,MAAAA,KAAK,EAAE,CAFD;AAGNY,MAAAA,MAAM,EAAE,CAAC,aAAD;AAHF,KApBM;AAyBdC,IAAAA,IAAI,EAAE;AACJV,MAAAA,IAAI,EAAE,IADF;AAEJW,MAAAA,WAAW,EAAE,MAFT;AAGJC,MAAAA,eAAe,EAAE;AAHb,KAzBQ;AA8BdC,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE,CACV,KADU,EAEV,gBAFU,EAGV,gBAHU,EAIV,gBAJU,EAKV,QALU,EAMV,OANU,CADP;AASLC,MAAAA,MAAM,EAAE;AACNf,QAAAA,IAAI,EAAE,IADA;AAENgB,QAAAA,KAAK,EAAE,OAFD;AAGNC,QAAAA,QAAQ,EAAE,CAHJ;AAINC,QAAAA,QAAQ,EAAE,GAJJ;AAKNC,QAAAA,KAAK,EAAE;AACLV,UAAAA,MAAM,EAAE,CACN,MADM,EAEN,MAFM,EAGN,MAHM,EAIN,MAJM,EAKN,MALM,EAMN,MANM,EAON,MAPM,EAQN,MARM,EASN,MATM,EAUN,MAVM;AADH;AALD;AATH,KA9BO;AA4DdW,IAAAA,KAAK,EAAE;AACLL,MAAAA,MAAM,EAAE;AACNf,QAAAA,IAAI,EAAE,IADA;AAENgB,QAAAA,KAAK,EAAE,OAFD;AAGNC,QAAAA,QAAQ,EAAE,CAHJ;AAINC,QAAAA,QAAQ,EAAE,GAJJ;AAKNC,QAAAA,KAAK,EAAE;AACLV,UAAAA,MAAM,EAAE,CACN,MADM,EAEN,MAFM,EAGN,MAHM,EAIN,MAJM,EAKN,MALM,EAMN,MANM,EAON,MAPM,EAQN,MARM,EASN,MATM,EAUN,MAVM;AADH;AALD;AADH,KA5DO;AAmFdY,IAAAA,OAAO,EAAE;AACPC,MAAAA,CAAC,EAAE;AACDC,QAAAA,SAAS,EAAE,UAAUC,GAAV,EAAe;AACxB,iBAAO,MAAMA,GAAN,GAAY,WAAnB;AACD;AAHA;AADI;AAnFK,GAAhB;AA2FA,sBACE;AAAA,4BACE;AAAK,MAAA,EAAE,EAAC,OAAR;AAAA,6BACE,QAAC,cAAD;AACE,QAAA,SAAS,EAAC,WADZ;AAEE,QAAA,OAAO,EAAE9B,MAFX;AAGE,QAAA,MAAM,EAAEN,MAHV;AAIE,QAAA,IAAI,EAAC,KAJP;AAKE,QAAA,MAAM,EAAE;AALV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAUE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,KAAK,EAAE,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AAAW,QAAA,SAAS,EAAC,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE,QAAC,SAAD;AAAW,QAAA,SAAS,EAAC,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA,kBADF;AAuBD;;GAjMQrB,M;;KAAAA,M;AAmMT,eAAeA,MAAf","sourcesContent":["\r\n\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport { Row, Col, Typography } from \"antd\";\r\nimport {useEffect,useState} from 'react';\r\nimport { getDeviceDataAll, getDeviceDataOne } from '../api/device';\r\n\r\nfunction EChart() {\r\n  const { Title, Paragraph } = Typography;\r\n  const [demo_day,setDemoData]=useState(null);\r\n  const [priority_list,setPriority] = useState(null);\r\n  const [seconds,setSeconds] =useState(null);\r\n  useEffect(() => {\r\n    getDeviceDataAll(\"demo_day\").then(res => {\r\n      setDemoData(res.data);\r\n      // console.log(\"data[0]\", res.data[0])\r\n      let temp = {\r\n        \"dryer\": res.data[0][\"dryer_priority\"],\r\n        \"heater\": res.data[0][\"heater_priority\"],\r\n        \"pot\": res.data[0][\"pot_priority\"],\r\n        \"purifier_black\": res.data[0][\"purifier_black_priority\"],\r\n        \"purifier_small\": res.data[0][\"purifier_small_priority\"],\r\n        \"purifier_white\": res.data[0][\"purifier_white_priority\"],\r\n      }\r\n      setPriority(temp);\r\n    });\r\n  }, []);\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n        \r\n      setSeconds(seconds => seconds + 1);\r\n    }, 5000);\r\n    \r\n    return () => clearInterval(interval);\r\n  }, []);\r\n  var data = [];\r\n  data.push([\r\n    'x', 'Pot', 'Purifier White','Purifier Black','Purifier Small','Heater','Dryer'\r\n    \r\n  ]);\r\n  if(demo_day===null){\r\n    data.push(['2022-01-24 00:00:00','0','0','0','0','0']);\r\n  }\r\n  else{\r\n    var range = seconds;\r\n    if(range>=144) range = 143;\r\n    var i =0;\r\n    for( i =0;i<=range;i++){\r\n        data.push([demo_day[i]['timestamp'],demo_day[i]['pot'],demo_day[i]['purifier_white'],demo_day[i]['purifier_black'],demo_day[i]['purifier_small'],demo_day[i]['heater'],demo_day[i]['dryer']])\r\n        \r\n    }\r\n  }\r\n  var d = {'timestamp':0,'pot':0,'purifier_white':0,'purifier_black':0,'purifier_small':0,'heater':0,'dryer':0};\r\n  for(i = 1;i<data.length;i++){\r\n    d['pot']+=data[i][1];\r\n    d['purifier_white']+=data[i][2];\r\n    d['purifier_black']+=data[i][3];\r\n    d['purifier_small']+=data[i][4];\r\n    d['dryer']+=data[i][5];\r\n    d['heater']+=data[i][6];\r\n  }\r\n  const series = [\r\n    {\r\n      name: \"Electricity\",\r\n      data: [d['pot'].toFixed(2), d['purifier_white'].toFixed(2), d['purifier_black'].toFixed(2), d['purifier_small'].toFixed(2), d['heater'].toFixed(2), d['dryer'].toFixed(2)],\r\n      color: \"#fff\",\r\n    },\r\n  ]\r\n  const items = [\r\n    {\r\n      Title: \"3,6K\",\r\n      user: \"Users\",\r\n    },\r\n    {\r\n      Title: \"2m\",\r\n      user: \"Clicks\",\r\n    },\r\n    {\r\n      Title: \"$772\",\r\n      user: \"Sales\",\r\n    },\r\n    {\r\n      Title: \"82\",\r\n      user: \"Items\",\r\n    },\r\n  ];\r\n  const option =  {\r\n    chart: {\r\n      type: \"bar\",\r\n      width: \"100%\",\r\n      height: \"auto\",\r\n\r\n      toolbar: {\r\n        show: false,\r\n      },\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        horizontal: false,\r\n        columnWidth: \"55%\",\r\n        borderRadius: 5,\r\n      },\r\n    },\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n    stroke: {\r\n      show: true,\r\n      width: 1,\r\n      colors: [\"transparent\"],\r\n    },\r\n    grid: {\r\n      show: true,\r\n      borderColor: \"#ccc\",\r\n      strokeDashArray: 2,\r\n    },\r\n    xaxis: {\r\n      categories: [\r\n        'pot',\r\n        'purifier_white',\r\n        'purifier_black',\r\n        'purifier_small',\r\n        'heater',\r\n        'dryer',\r\n      ],\r\n      labels: {\r\n        show: true,\r\n        align: \"right\",\r\n        minWidth: 0,\r\n        maxWidth: 160,\r\n        style: {\r\n          colors: [\r\n            \"#fff\",\r\n            \"#fff\",\r\n            \"#fff\",\r\n            \"#fff\",\r\n            \"#fff\",\r\n            \"#fff\",\r\n            \"#fff\",\r\n            \"#fff\",\r\n            \"#fff\",\r\n            \"#fff\",\r\n          ],\r\n        },\r\n      },\r\n    },\r\n    yaxis: {\r\n      labels: {\r\n        show: true,\r\n        align: \"right\",\r\n        minWidth: 0,\r\n        maxWidth: 160,\r\n        style: {\r\n          colors: [\r\n            \"#fff\",\r\n            \"#fff\",\r\n            \"#fff\",\r\n            \"#fff\",\r\n            \"#fff\",\r\n            \"#fff\",\r\n            \"#fff\",\r\n            \"#fff\",\r\n            \"#fff\",\r\n            \"#fff\",\r\n          ],\r\n        },\r\n      },\r\n    },\r\n\r\n    tooltip: {\r\n      y: {\r\n        formatter: function (val) {\r\n          return \" \" + val + \" Wattages\";\r\n        },\r\n      },\r\n    },\r\n  };\r\n  return (\r\n    <>\r\n      <div id=\"chart\">\r\n        <ReactApexChart\r\n          className=\"bar-chart\"\r\n          options={option}\r\n          series={series}\r\n          type=\"bar\"\r\n          height={250}\r\n        />\r\n      </div>\r\n      <div className=\"chart-vistior\">\r\n        <Title level={5}>Electricity distribution</Title>\r\n        <Paragraph className=\"lastweek\">\r\n          Update every 10 minutes \r\n        </Paragraph>\r\n        <Paragraph className=\"lastweek\">\r\n          We can see the usage of electricity of every electronical device.\r\n        </Paragraph>\r\n        \r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EChart;\r\n"]},"metadata":{},"sourceType":"module"}